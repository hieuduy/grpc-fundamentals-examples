syntax = "proto3";

package calculator;
option go_package = "src/calculatorpb";
option java_package = "com.elsevier.calculator";

message CalculateSumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message CalculateSumResponse {
  int32 sum = 1;
}

message DecomposePrimeFactorRequest {
  int64 number = 1;
}

message DecomposePrimeFactorResponse {
  int64 prime_factor = 1;
}

message CalculateSumEvenNumberRequest {
  int32 number = 1;
}

message CalculateSumEvenNumberResponse {
  int32 sum = 1;
}

message FindMaxNumberRequest {
  int32 number = 1;
}

message FindMaxNumberResponse {
  int32 max_number = 1;
}

service CalculatorService {
  // Unary
  rpc CalculateSum(CalculateSumRequest) returns (CalculateSumResponse) {};

  // Server Streaming
  rpc DecomposePrimeFactor(DecomposePrimeFactorRequest) returns (stream DecomposePrimeFactorResponse) {};

  // Client Streaming
  rpc CalculateSumEvenNumber(stream CalculateSumEvenNumberRequest) returns (CalculateSumEvenNumberResponse) {};

  // Bi-directional Streaming
  rpc FindMaxNumber(stream FindMaxNumberRequest) returns (stream FindMaxNumberResponse) {};
}
